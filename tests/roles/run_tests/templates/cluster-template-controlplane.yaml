apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlaneTemplate
metadata:
  name: ${CLUSTER_NAME}
  namespace: ${NAMESPACE}
spec:
  template:
    spec:
      rolloutStrategy:
        rollingUpdate:
          maxSurge: ${ MAX_SURGE_VALUE }
      machineTemplate:
        nodeDrainTimeout: ${ NODE_DRAIN_TIMEOUT }
      kubeadmConfigSpec:
        {% filter indent(width=8, first=True) %}
        {% include "cluster-template-controlplane-kubeadm-config-%s.yaml" % IMAGE_OS %}
        {% endfilter %}
        clusterConfiguration: {}
        joinConfiguration:
          controlPlane: {}
          nodeRegistration:
            name: "{{ '{{ ds.meta_data.name }}' }}"
            kubeletExtraArgs:
              node-labels: "metal3.io/uuid={{ '{{ ds.meta_data.uuid }}' }}"
              provider-id: "metal3://{{ '{{ ds.meta_data.providerid }}' }}"
              feature-gates: "AllAlpha=false"
              cgroup-driver: "systemd"
              container-runtime-endpoint: "unix:///var/run/crio/crio.sock"
              runtime-request-timeout: "5m"
        initConfiguration:
          nodeRegistration:
            name: "{{ '{{ ds.meta_data.name }}' }}"
            kubeletExtraArgs:
              node-labels: "metal3.io/uuid={{ '{{ ds.meta_data.uuid }}' }}"
              provider-id: "metal3://{{ '{{ ds.meta_data.providerid }}' }}"
              feature-gates: "AllAlpha=false"
              cgroup-driver: "systemd"
              container-runtime-endpoint: "unix:///var/run/crio/crio.sock"
              runtime-request-timeout: "5m"
        users:
        - name: {{ IMAGE_USERNAME }}
          sudo: "ALL=(ALL) NOPASSWD:ALL"
          sshAuthorizedKeys:
          - {{ SSH_PUB_KEY_CONTENT }}
---
apiVersion: infrastructure.cluster.x-k8s.io/{{ CAPM3_VERSION }}
kind: Metal3MachineTemplate
metadata:
  name: ${ CLUSTER_NAME }-controlplane
  namespace: ${ NAMESPACE }
spec:
  template:
    spec:
      image:
        url: {{ IMAGE_URL }}
        checksum: {{ IMAGE_CHECKSUM }}
        checksumType: {{ IMAGE_CHECKSUM_TYPE }}
        format: {{ IMAGE_FORMAT }}
      dataTemplate:
        name: ${ CLUSTER_NAME }-controlplane-template
---
{% with template_type="controlplane" %}
{% include "metal3datatemplate-template.yaml" %}
{% endwith %}
