---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: Metal3ClusterTemplate
metadata:
  name: ${CLUSTER_NAME}
  namespace: ${NAMESPACE}
spec:
  template:
    spec:
      controlPlaneEndpoint:
        host: ${CLUSTER_APIENDPOINT_HOST}
        port: ${CLUSTER_APIENDPOINT_PORT}
      noCloudProvider: true
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: ClusterClass
metadata:
  name: ${CLUSTER_NAME}
  namespace: ${NAMESPACE}
spec:
  controlPlane:
    ref:
      apiVersion: controlplane.cluster.x-k8s.io/v1beta1
      kind: KubeadmControlPlaneTemplate
      name: ${CLUSTER_NAME}
    machineInfrastructure:
      ref:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: Metal3MachineTemplate
        name: ${CLUSTER_NAME}-controlplane
  workers:
    machineDeployments:
    - class: ${CLUSTER_NAME}-workers
      template:
        metadata:
          labels:
            cluster.x-k8s.io/cluster-name: ${ CLUSTER_NAME }
            nodepool: nodepool-0
        spec:
          bootstrap:
            configRef:
              name: ${ CLUSTER_NAME }-workers
              apiVersion: bootstrap.cluster.x-k8s.io/{{ CAPI_VERSION }}
              kind: KubeadmConfigTemplate
          infrastructureRef:
            name: ${ CLUSTER_NAME }-workers
            apiVersion: infrastructure.cluster.x-k8s.io/{{ CAPM3_VERSION }}
            kind: Metal3MachineTemplate
          nodeDrainTimeout: ${ NODE_DRAIN_TIMEOUT }
  infrastructure:
    ref:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: Metal3ClusterTemplate
      name: ${CLUSTER_NAME}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: ${CLUSTER_NAME}
  namespace: ${NAMESPACE}
spec:
  clusterNetwork:
    services:
      cidrBlocks: [${ SERVICE_CIDR }]
    pods:
      cidrBlocks: [${ POD_CIDR }]
  topology:
    class: ${CLUSTER_NAME}
    version: v1.27.3
    controlPlane:
      replicas: 1
    workers:
      machineDeployments:
      - class: ${CLUSTER_NAME}-workers
        name: ${CLUSTER_NAME}-workers
        replicas: 1
---
apiVersion: ipam.metal3.io/v1alpha1
kind: IPPool
metadata:
  name: provisioning-pool
  namespace: ${ NAMESPACE }
spec:
  clusterName: ${ CLUSTER_NAME }
  namePrefix: ${ CLUSTER_NAME }-prov
  pools:
    - start: ${ IPAM_PROVISIONING_POOL_RANGE_START }
      end: ${ IPAM_PROVISIONING_POOL_RANGE_END }
  prefix: ${ BARE_METAL_PROVISIONER_CIDR }
{% if IP_STACK == 'v4' or IP_STACK == 'v4v6' %}
---
apiVersion: ipam.metal3.io/v1alpha1
kind: IPPool
metadata:
  name: externalv4-pool
  namespace: ${ NAMESPACE }
spec:
  clusterName: ${ CLUSTER_NAME }
  namePrefix: ${ CLUSTER_NAME }-bmv4
  pools:
    - start: ${ IPAM_EXTERNALV4_POOL_RANGE_START }
      end: ${ IPAM_EXTERNALV4_POOL_RANGE_END }
  prefix: ${ EXTERNAL_SUBNET_V4_PREFIX }
  gateway: ${ EXTERNAL_SUBNET_V4_HOST }
{% endif %}
{% if IP_STACK == 'v6' or IP_STACK == 'v4v6' %}
---
apiVersion: ipam.metal3.io/v1alpha1
kind: IPPool
metadata:
  name: externalv6-pool
  namespace: ${ NAMESPACE }
spec:
  clusterName: ${ CLUSTER_NAME }
  namePrefix: ${ CLUSTER_NAME }-bmv6
  pools:
    - start: ${ IPAM_EXTERNALV6_POOL_RANGE_START }
      end: ${ IPAM_EXTERNALV6_POOL_RANGE_END }
  prefix: ${ EXTERNAL_SUBNET_V6_PREFIX }
  gateway: ${ EXTERNAL_SUBNET_V6_HOST }
{% endif %}
